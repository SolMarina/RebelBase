{"version":3,"sources":["components/navmobile/NavMobile.module.css","components/navbar/NavBar.js","components/dragAndDrop/DragAndDrop.js","components/dataTable/DataTable.js","components/navmobile/NavMobile.js","RebelBaseApp.js","index.js"],"names":["module","exports","NavBar","props","useEffect","sidenav","document","querySelectorAll","M","Sidenav","init","id","className","details","map","item","href","value","onClick","key","DragAndDrop","state","items","getItems","onDragEnd","bind","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","this","source","index","setState","nextProps","number","find","x","status","droppableId","provided","snapshot","RootRef","rootRef","innerRef","List","style","isDraggingOver","draggableId","ListItem","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","background","IconButton","disableItem","ListItemText","primary","secondary","src","image","alt","width","height","ListItemSecondaryAction","type","placeholder","min","max","Component","DataTable","useState","data","setData","getArrayDragsItems","dragItems","Object","entries","card","img","product","push","isArray","rows","task","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","NavResponsive","classes","selectOptions","filter","styles","navb","buttonBox","button1","selectBox","FormControl","NativeSelect","onChange","RebelBaseApp","categoryList","SetcategoryList","categorySelected","setCategorySelected","options","dataInfo","category","getCategories","updatecategorySelected","val","target","attributes","nodeValue","updateAll","console","log","handleChange","event","NavMobile","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.77290f85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navb\":\"NavMobile_navb__HUxAV\",\"buttonBox\":\"NavMobile_buttonBox__2JVN3\"};","import M from \"materialize-css\";\r\nimport React, { useEffect } from 'react';\r\n\r\nconst NavBar = (props) => {\r\n  useEffect(() => {\r\n    const sidenav = document.querySelectorAll('.sidenav');\r\n\r\n    const instances = M.Sidenav.init(sidenav)\r\n\r\n    //console.log(instances);\r\n  });\r\n\r\n  return (\r\n\r\n    <div>\r\n      <ul id=\"slide-out\" className=\"sidenav sidenav-fixed\">\r\n\r\n        {\r\n          props.details.map(item => { return (<li><a href=\"#!\" value={item} key={item.key} onClick={props.onClick()}> {item}</a></li>) })\r\n        }\r\n\r\n      </ul>\r\n    </div >\r\n  )\r\n}\r\nexport default NavBar\r\n\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    IconButton,\r\n    ListItemSecondaryAction,\r\n\r\n} from \"@material-ui/core\";\r\nimport RootRef from \"@material-ui/core/RootRef\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n\r\n    ...(isDragging && {\r\n        background: \"rgb(255, 255, 255)\"\r\n    })\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    //background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n});\r\n\r\n\r\n\r\nexport class DragAndDrop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: props.getItems\r\n        };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    onDragEnd(result) {\r\n        // dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const items = reorder(\r\n            this.state.items,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n\r\n        this.setState({\r\n            items\r\n        });\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            items: nextProps.getItems\r\n        });\r\n    }\r\n\r\n    disableItem(number) {\r\n        const result = this.state.items.find(x => x.id === number).status\r\n        this.state.items.find(x => x.id === number).status = !result;\r\n        this.setState({\r\n            items: this.state.items\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <RootRef rootRef={provided.innerRef}>\r\n                            <List style={getListStyle(snapshot.isDraggingOver)}>\r\n                                {this.state.items.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <ListItem\r\n                                                ContainerComponent=\"li\"\r\n                                                ContainerProps={{ ref: provided.innerRef }}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                            >\r\n                                                <IconButton >\r\n                                                    <button className=\"buttonr\" value={item.id} onClick={() => { this.disableItem(item.id) }}>.</button>\r\n                                                </IconButton>\r\n\r\n                                                <div className={item.status ? 'cards' : 'cardsdisable'}>\r\n\r\n                                                    <ListItemText\r\n                                                        primary={item.primary}\r\n                                                        secondary={item.secondary}\r\n                                                    />\r\n                                                    <img className={item.status ? \"imgicon\" : \"imgicondisable\"} src={item.image} alt=\"\" width=\"80\" height=\"80\" ></img>\r\n                                                </div>\r\n\r\n                                                <ListItemSecondaryAction>\r\n                                                    <div className={item.status ? \"date\" : \"datedisable\"}               >\r\n                                                        <div>\r\n                                                            <input type=\"date\" id=\"start\"\r\n                                                                placeholder=\"MMM DD,YYYY\" />\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <input type=\"time\" id=\"appt\" min=\"09:00\"\r\n                                                                max=\"18:00\" />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </ListItemSecondaryAction>\r\n\r\n                                            </ListItem>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </List>\r\n                        </RootRef>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragAndDrop\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DragAndDrop from '../dragAndDrop/DragAndDrop'\r\n\r\nconst DataTable = (props) => {\r\n\r\n    const [data, setData] = useState(props.details);\r\n\r\n\r\n    useEffect(() => {\r\n        setData(props.details);\r\n    });\r\n\r\n    const getArrayDragsItems = (data) => {\r\n\r\n        const dragItems = [];\r\n        for (const [key, value] of Object.entries(data)) {\r\n            let card = {\r\n                id: value.id,\r\n                image: value.img,\r\n                primary: value.product,\r\n                secondary: 'View builder',\r\n                status: true\r\n            }\r\n            dragItems.push(card);\r\n        }\r\n        return dragItems;\r\n    }\r\n\r\n    if (Array.isArray(data)) {\r\n\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    data.map(item => {\r\n                        const rows = getArrayDragsItems(item.task)\r\n                        return (\r\n                            <div >\r\n                                <h5> {item.id} </h5>\r\n                                <DragAndDrop getItems={rows} />\r\n                            </div >\r\n                        )\r\n                    })\r\n                }\r\n            </div >\r\n        )\r\n\r\n\r\n    } else {\r\n\r\n        return (\r\n            <div>\r\n                <h5> {data.id} </h5>\r\n                <DragAndDrop getItems={getArrayDragsItems(data.task)} />\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\nexport default DataTable","import React from 'react';\r\nimport styles from '../navmobile/NavMobile.module.css'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n\r\n}));\r\n\r\nconst NavResponsive = (props) => {\r\n    const classes = useStyles();\r\n   \r\n    const selectOptions = props.details.filter(item => item !== 'All');;\r\n\r\n    return (\r\n        <div className={styles.navb}>\r\n            <div className={styles.buttonBox}>\r\n                <button className={styles.button1} onClick={props.onClick()}>All</button>\r\n            </div>\r\n            <div className={styles.selectBox}>\r\n                <FormControl className={classes.formControl}>\r\n                    <NativeSelect\r\n                        onChange={props.onChange()}\r\n                        className={classes.selectEmpty}\r\n                        \r\n                    >\r\n                        {selectOptions.map(item => { return (<option key={item} value={item}> {item}</option>) })}\r\n\r\n                    </NativeSelect>\r\n\r\n                </FormControl>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default NavResponsive","import React, { useState, useEffect } from 'react';\r\nimport NavBar from './components/navbar/NavBar';\r\nimport dataInfo from './dataInfo.json';\r\nimport DataTable from './components/dataTable/DataTable';\r\nimport NavMobile from './components/navmobile/NavMobile';\r\nconst RebelBaseApp = () => {\r\n    const [categoryList, SetcategoryList] = useState([]);\r\n    const [categorySelected, setCategorySelected] = useState('All');\r\n\r\n    const getCategories = () => {\r\n        const options = ['All'];\r\n        //dataInfo.map(category => { categoryList.push(category.id) })\r\n        dataInfo.map(category => { options.push(category.id) })\r\n        return options;\r\n    }\r\n\r\n    const getFilterCategory = () => {\r\n        if (categorySelected === 'All') {\r\n            return dataInfo;\r\n        }\r\n        else {\r\n            return dataInfo.find(item => item.id === categorySelected);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        SetcategoryList(getCategories());\r\n    }, [])\r\n\r\n    const updatecategorySelected = (val) => {\r\n        setCategorySelected(val.target.attributes[1].nodeValue);\r\n    };\r\n\r\n    const updateAll = () => {\r\n        setCategorySelected('All');\r\n        console.log(categorySelected)\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        console.log('entro en esta verga del select');\r\n        setCategorySelected(event.target.value);\r\n        console.log(categorySelected)\r\n      };\r\n\r\n    //getCategories();\r\n    console.log(\"categorySelected\")\r\n    console.log(categorySelected)\r\n    \r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"box1\">\r\n                <NavBar details={categoryList} onClick={() => updatecategorySelected} />\r\n            </div>\r\n           \r\n            <div className=\"box4\">\r\n                <h4>Select Builder Schedule-2019 Fall Cohort</h4>\r\n                <NavMobile details={categoryList} onClick={() => updateAll} onChange={(event) => handleChange} />\r\n                <div className=\"box2\" >\r\n             \r\n                    <div className=\"box3\" >\r\n                      \r\n                        <DataTable details={getFilterCategory()}  />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default RebelBaseApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RebelBaseApp from './RebelBaseApp';\r\nimport './index.css';\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\n\r\n\r\nReactDOM.render(\r\n\r\n  <RebelBaseApp />,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}